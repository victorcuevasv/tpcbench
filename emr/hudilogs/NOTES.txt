-- Table containing the file operations as read from the CSV
CREATE TABLE hudi_filelog_stage(
	experiment varchar(200),
	step int,
	fileId varchar(100),
	path varchar(500),
	numWrites int,
	numDeletes int,
	numUpdateWrites int,
	numInserts int,
	totalWriteBytes bigint,
	partitionPath varchar(20),
	fileSizeInBytes bigint
);


-- Load the file operations from the CSV
COPY hudi_filelog_stage
FROM 'C:\Users\bscuser\Desktop\hudiLog.csv'
DELIMITER '|'
CSV HEADER;


-- Table that represents the files after each committ
CREATE TABLE hudi_filecommits(
	experiment varchar(200),
	state int,
	path varchar(500),
	fileId varchar(100),
	records int,
	size bigint,
	partition varchar(20)
);



-- Fill the hudi_filecommits table starting from the first added files at step 0
INSERT INTO hudi_filecommits
SELECT experiment, 0, path, fileId, numInserts, fileSizeInBytes, partitionPath
FROM hudi_filelog_stage WHERE step = 0;

-- For each new commit state, insert in it the files added in the previous commit that
-- were not removed in the new commit, plus the files added in the new commit
do $$
declare
	i int := 0;
	maxCommit int := 1;
	stmt text;
begin
	SELECT max(step) INTO maxCommit FROM hudi_filelog_stage;
	loop
		exit when i = maxCommit; 
		stmt = FORMAT('INSERT INTO hudi_filecommits
		(SELECT experiment, %1$s + 1, path, fileId, records, size, partition
		FROM hudi_filecommits
		WHERE state = %1$s )
		UNION
		(SELECT experiment, %1$s + 1, path, fileId, numInserts-numDeletes, fileSizeInBytes, partitionPath
		FROM hudi_filelog_stage WHERE step = %1$s + 1)', i);
		EXECUTE stmt;
		RAISE NOTICE '%' , stmt;
		i := i + 1;
	end loop;	
end; $$






--Query to summarize the state of the table after each operation

SELECT state AS state, count(DISTINCT fileId) AS "total files", SUM(records) AS "total records", 
ROUND(SUM(size)/(1024*1024*1024), 1) AS "total size (GB)", COUNT(DISTINCT partition) AS "total partitions",
ROUND(SUM(size)/SUM(records),0) AS "avg record size (bytes)",
ROUND( (SUM(size)/(1024*1024))/COUNT(*), 1) AS "avg file size (MB)"
FROM hudi_filecommits
GROUP BY state;

--Query to summarize the changes induced by each operation


SELECT step AS step,
	COUNT(DISTINCT fileId) AS "Upserted files",   
	SUM(numWrites) AS "Num writes",
	SUM(numDeletes) AS "Num deletes",
	SUM(numUpdateWrites) AS "Num update writes",
	SUM(numInserts) AS "Num inserts",
	ROUND(SUM(totalWriteBytes)/(1024*1024*1024), 2) AS "Total data written (GB)",
	ROUND(SUM(fileSizeInBytes)/(1024*1024*1024), 2) AS "Total data size (GB)",
	COUNT(DISTINCT partitionPath) AS "Partitions updated"
FROM hudi_filelog_stage s
GROUP BY step;







